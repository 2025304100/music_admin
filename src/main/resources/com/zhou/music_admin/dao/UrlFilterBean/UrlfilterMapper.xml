<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhou.music_admin.dao.UrlFilterBean.UrlfilterMapper">
  <resultMap id="BaseResultMap" type="com.zhou.music_admin.entity.UrlFilterBean.Urlfilter">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user" jdbcType="VARCHAR" property="user" />
    <result column="roles" jdbcType="VARCHAR" property="roles" />
    <result column="url" jdbcType="INTEGER" property="url" />
    <result column="groud" jdbcType="VARCHAR" property="groud" />
  </resultMap>
  <resultMap id="BaseAuthorizationMap" type="com.zhou.music_admin.entity.UrlFilterBean.UrlAuthorizationBean">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="groud" jdbcType="VARCHAR" property="groud" />
    <result column="seed" jdbcType="VARCHAR" property="seed" />
  </resultMap>
  <select id="getAuthorization" parameterType="java.lang.String" resultMap="BaseAuthorizationMap">
    select F.`roles`,T.url from url_title T
    left  join
    (SELECT url,`roles` FROM urlFilter where  urlFilter.user=#{username}) F
     ON T.id=F.url
  </select>
  <select id="getUrlTitle" resultMap="BaseAuthorizationMap">
    select url from url_title
  </select>
</mapper>